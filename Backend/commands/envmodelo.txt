from logging.config import fileConfig

from sqlalchemy import engine_from_config
from sqlalchemy import pool

from alembic import context


# Carregando .env
import os,sys
from dotenv import load_dotenv

BASE_DIR= os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
load_dotenv(os.path.join(BASE_DIR, '.env'))
sys.path.append(BASE_DIR)


# this is the Alembic Config object, which provides
# access to the values within the .ini file in use.
config = context.config


#  Conectando ao DB
config.set_main_option('sqlalchemy.url', os.environ['DATABASE_URL'])

# Interpret the config file for Python logging.
# This line sets up loggers basically.
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# add your model's MetaData object here
# for 'autogenerate' support
import src.models as models
target_metadata = models.Base.metadata


# other values from the config, defined by the needs of env.py,
# can be acquired:
# my_important_option = config.get_main_option("my_important_option")
# ... etc.


def run_migrations_offline() -> None:
    """Run migrations in 'offline' mode.

    This configures the context with just a URL
    and not an Engine, though an Engine is acceptable
    here as well.  By skipping the Engine creation
    we don't even need a DBAPI to be available.

    Calls to context.execute() here emit the given string to the
    script output.

    """
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """Run migrations in 'online' mode.

    In this scenario we need to create an Engine
    and associate a connection with the context.

    """
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection, target_metadata=target_metadata
        )

        with context.begin_transaction():
            context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()


CONFIGS DABATABES:
    POSTGRES_USER = "postgres"
    POSTGRES_PASSWORD = vini123
    POSTGRES_SERVER = "localhost"
    POSTGRES_PORT = 5432 # default postgres port is 5432
    POSTGRES_DB ="db_associates"

sql de inserção
-- Inserir dados na tabela user
INSERT INTO "user" (id, name, email, cpf, data_nascimento, senha, quantidade, cargo, dtassociacao, created_at, updated_at)
VALUES 
(1, 'João Silva', 'joao.silva@example.com', '123.456.789-00', '1980-01-01', 'senha123', 2, 'Gerente', '2023-01-01', '2023-10-01 10:00:00', '2023-10-01 10:00:00'),
(2, 'Maria Oliveira', 'maria.oliveira@example.com', '987.654.321-00', '1990-02-02', 'senha456', 1, 'Analista', '2023-02-01', '2023-10-01 11:00:00', '2023-10-01 11:00:00'),
(3, 'Carlos Souza', 'carlos.souza@example.com', '456.789.123-00', '1985-03-03', 'senha789', 3, 'Diretor', '2023-03-01', '2023-10-01 12:00:00', '2023-10-01 12:00:00');

-- Inserir dados na tabela mensalidades
INSERT INTO mensalidades (id, valor, dataVencimento, dataPagamento, idSocio)
VALUES 
(1, 100.00, '2023-10-10', '2023-10-09', 1),
(2, 150.00, '2023-10-15', '2023-10-14', 2),
(3, 200.00, '2023-10-20', '2023-10-19', 3);

-- Inserir dados na tabela solicitacoes
INSERT INTO solicitacoes (id, idUsuario, data, status)
VALUES 
(1, 1, '2023-10-01', 'Pendente'),
(2, 2, '2023-10-02', 'Aprovada'),
(3, 3, '2023-10-03', 'Rejeitada');

-- Inserir dados na tabela projetos
INSERT INTO projetos (id, titulo, dataInicio, dataFim)
VALUES 
(1, 'Projeto A', '2023-01-01', '2023-12-31'),
(2, 'Projeto B', '2023-02-01', '2023-11-30'),
(3, 'Projeto C', '2023-03-01', '2023-10-31');

-- Inserir dados na tabela user_projetos (tabela de associação)
INSERT INTO user_projetos (user_id, projeto_id)
VALUES 
(1, 1),
(1, 2),
(2, 2),
(3, 3);

-- Inserir dados na tabela despesas
INSERT INTO despesas (id, valor, data, origem)
VALUES 
(1, 500.00, '2023-10-01', 'Compra de materiais'),
(2, 300.00, '2023-10-02', 'Serviços de consultoria'),
(3, 200.00, '2023-10-03', 'Manutenção de equipamentos');

-- Inserir dados na tabela receitas
INSERT INTO receitas (id, valor, data, origem)
VALUES 
(1, 1000.00, '2023-10-01', 'Venda de produtos'),
(2, 1500.00, '2023-10-02', 'Prestação de serviços'),
(3, 2000.00, '2023-10-03', 'Investimentos');

-- Inserir dados na tabela relatorios
INSERT INTO relatorios (id, data, idDespesa, idReceita)
VALUES 
(1, '2023-10-01', 1, 1),
(2, '2023-10-02', 2, 2),
(3, '2023-10-03', 3, 3);